{"version":3,"sources":["media/search.svg","media/logo.svg","component/home.component.js","component/add.component.js","component/landing.component.js","component/login.component.js","component/register.component.js","component/search.component.js","component/profile.component.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","Component","Add","Landing","props","state","query","navigate","handleSubmit","bind","handleChange","e","this","setState","target","value","keyCode","localStorage","getItem","document","getElementById","style","display","to","push","id","className","alt","src","Search","onChange","onKeyDown","autoComplete","placeholder","Login","username","password","buttonCheck","name","fetch","method","headers","body","JSON","stringify","then","res","json","token","console","log","setItem","type","onClick","Register","email","first_name","last_name","submitData","required","booklist","handleSearch","updateState","formatDate","search","window","location","params","URLSearchParams","get","client","elasticsearch","Client","host","q","response","i","hits","length","getCondition","formData","FormData","append","isbn","Authorization","listing","k","fields","condition","listings","preventDefault","date","d","Date","month","getMonth","day","getDate","year","getFullYear","join","SearchIcon","map","item","key","title","edition","author","added_at","user","price","Profile","uploadListing","uploadBook","getListings","books","model","time","pk","undefined","reply","detail","clear","event","formdata","status","href","onSubmit","App","Logo","removeItem","exact","path","Boolean","hostname","match","ReactDOM","render","navigator","serviceWorker","ready","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,oC,wCCA3CD,EAAOC,QAAU,IAA0B,kC,uMCItBC,E,iLAEb,OACI,yC,GAHsBC,aCAbC,E,iLAEb,OACI,wC,GAHqBD,a,wBCEZE,E,YACjB,WAAYC,GAAO,IAAD,8BACd,4CAAMA,KACDC,MAAQ,CACTC,MAAO,GACPC,UAAU,GAGd,EAAKC,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBARN,E,0EAULE,GAETC,KAAKC,SAAS,CACVP,MAAOK,EAAEG,OAAOC,U,mCAGXJ,GAES,KAAdA,EAAEK,SACFJ,KAAKC,SAAS,CACVN,UAAS,M,0CAKmB,MAAjCU,aAAaC,QAAQ,UACpBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,SAEpDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,U,+BAMxD,OADqBV,KAAKP,MAAlBE,SAEG,kBAAC,IAAD,CAAUgB,GAAI,iBAAkBX,KAAKP,MAAMC,MAAOkB,MAAM,IAG/D,yBAAKC,GAAG,WACJ,6BACI,wBAAIA,GAAG,gBAAP,WACA,yBAAKC,UAAU,oBACX,yBAAKC,IAAI,cAAcD,UAAU,OAAOE,IAAKC,MAC7C,2BAAOC,SAAUlB,KAAKF,aAAcqB,UAAWnB,KAAKJ,aAAcwB,aAAa,MAAOP,GAAG,SAASQ,YAAY,sBAElH,yBAAKR,GAAG,WAAR,6D,GAlDiBxB,a,QCDhBiC,E,YACjB,WAAY9B,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT8B,SAAU,MACVC,SAAU,GACV7B,UAAU,GAEd,EAAKG,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKD,aAAe,EAAKA,aAAaC,KAAlB,gBACpB,EAAK4B,YAAc,EAAKA,YAAY5B,KAAjB,gBATJ,E,0EAWNE,GAETC,KAAKC,SAAL,eACKF,EAAEG,OAAOwB,KAAO3B,EAAEG,OAAOC,U,qCAIlB,IAAD,OAEXwB,MAAM,oCAAqC,CACvCC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CACjBT,SAAUvB,KAAKP,MAAM8B,SACrBC,SAAUxB,KAAKP,MAAM+B,aAGxBS,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACgB,MAAdA,EAAKC,OACLC,QAAQC,IAAIH,EAAKC,OACjB/B,aAAakC,QAAQ,QAASJ,EAAKC,OAEnC,EAAKnC,SAAS,CACVN,UAAU,MAGd0C,QAAQC,IAAI,gBACZ/B,SAASC,eAAe,WAAWC,MAAMC,QAAU,c,kCAIvDX,GAEU,KAAdA,EAAEK,SACFJ,KAAKJ,iB,0CAK4B,MAAjCS,aAAaC,QAAQ,UACrBN,KAAKC,SAAS,CACVN,UAAU,IAEdY,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,SAEpDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,U,+BAOxD,OADqBV,KAAKP,MAAlBE,SAEG,kBAAC,IAAD,CAAUgB,GAAG,WAAWC,MAAM,IAIrC,yBAAKC,GAAG,WACJ,yBAAKA,GAAG,YACJ,wBAAIA,GAAG,cAAP,SACA,yBAAKA,GAAG,aACJ,yBAAKA,GAAG,WAAR,yCACA,2BAAOa,KAAK,WAAWR,SAAUlB,KAAKF,aAAcuB,YAAY,aAChE,2BAAOF,UAAWnB,KAAKyB,YAAae,KAAK,WAAWd,KAAK,WAAWR,SAAUlB,KAAKF,aAAcuB,YAAY,aAC7G,4BAAQoB,QAASzC,KAAKJ,cAAtB,UAGJ,kBAAC,IAAD,CAAMe,GAAG,YAAW,yBAAKE,GAAG,YAAR,yB,GAtFLxB,aCDdqD,E,YACjB,WAAYlD,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACT8B,SAAU,GACVC,SAAU,GACVmB,MAAO,GACPC,WAAY,GACZC,UAAW,GACXlD,UAAU,GAEd,EAAKG,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKiD,WAAa,EAAKA,WAAWjD,KAAhB,gBAClB,EAAK4B,YAAc,EAAKA,YAAY5B,KAAjB,gBAZJ,E,iFAgBsB,MAAjCQ,aAAaC,QAAQ,UACrBN,KAAKC,SAAS,CACVN,UAAU,IAEdY,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,SAEpDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,U,mCAG/CX,GAETC,KAAKC,SAAL,eACKF,EAAEG,OAAOwB,KAAO3B,EAAEG,OAAOC,U,mCAGpB,IAAD,OAET,IACIwB,MAAM,0CAA2C,CAC7CC,OAAQ,OACRC,QAAS,CACL,eAAgB,oBAGpBC,KAAMC,KAAKC,UAAU,CACjBW,MAAO3C,KAAKP,MAAMkD,MAClBnB,SAAUxB,KAAKP,MAAM+B,SACrBoB,WAAY5C,KAAKP,MAAMmD,WACvBC,UAAW7C,KAAKP,MAAMoD,UACtBtB,SAAUvB,KAAKP,MAAM8B,aAGxBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAE,GACe,MAAdA,EAAKC,OACJ/B,aAAakC,QAAQ,QAASJ,EAAKC,OAGrB,MAAdD,EAAKC,MACL,EAAKnC,SAAS,CACVN,UAAU,IAGd,EAAKM,SAAS,CACVN,UAAU,OAK5B,MAAOI,GACLsC,QAAQC,IAAI,gBAEZtC,KAAKC,SAAS,CACVN,UAAU,O,kCAIVI,GAEU,KAAdA,EAAEK,SACFJ,KAAK8C,e,+BAMT,OADqB9C,KAAKP,MAAlBE,SAEG,kBAAC,IAAD,CAAUgB,GAAG,WAAWC,MAAM,IAIrC,yBAAKC,GAAG,WACJ,yBAAKA,GAAG,YACJ,wBAAIA,GAAG,cAAP,kBACA,yBAAKA,GAAG,aACJ,2BAAOkC,UAAQ,EAACrB,KAAK,aAAaR,SAAUlB,KAAKF,aAAcuB,YAAY,eAC3E,2BAAO0B,UAAQ,EAACrB,KAAK,YAAYR,SAAUlB,KAAKF,aAAcuB,YAAY,cAC1E,2BAAO0B,UAAQ,EAACrB,KAAK,QAAQR,SAAUlB,KAAKF,aAAcuB,YAAY,UACtE,2BAAO0B,UAAQ,EAACrB,KAAK,WAAWR,SAAUlB,KAAKF,aAAcuB,YAAY,aACzE,2BAAOF,UAAWnB,KAAKyB,YAAasB,UAAQ,EAACP,KAAK,WAAWd,KAAK,WAAWR,SAAUlB,KAAKF,aAAcuB,YAAY,aACtH,4BAAQoB,QAASzC,KAAK8C,YAAtB,mBAGJ,kBAAC,IAAD,CAAMnC,GAAG,SAAQ,yBAAKE,GAAG,YAAR,gB,GAxGCxB,a,0CCAjB4B,E,YACjB,WAAYzB,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTC,MAAO,GACPsD,SAAU,IAEd,EAAKC,aAAe,EAAKA,aAAapD,KAAlB,gBACpB,EAAKqD,YAAc,EAAKA,YAAYrD,KAAjB,gBACnB,EAAKsD,WAAa,EAAKA,WAAWtD,KAAhB,gBARH,E,gOAYXuD,EAASC,OAAOC,SAASF,OACzBG,EAAS,IAAIC,gBAAgBJ,GAEpB,OADT1D,EAAQ6D,EAAOE,IAAI,U,wBAGfC,EAAS,IAAIC,IAAcC,OAAO,CAClCC,KAAM,0B,kBAGiBH,EAAON,OAAO,CACjCU,EAAGpE,I,OAGP,IAJMqE,E,OAGFf,EAAW,GACNgB,EAAI,EAAGA,EAAID,EAASE,KAAKA,KAAKC,OAAQF,IAC3ChB,EAASpC,KAAKmD,EAASE,KAAKA,KAAKD,GAAnB,S,OAElBhE,KAAKC,SAAS,CACV+C,SAAUA,I,qDAIdX,QAAQC,IAAI,yBACZD,QAAQC,IAAI,iB,eAIhB6B,EAAe,CACf,GAAM,YACN,EAAK,OACL,EAAK,OACL,EAAK,OACL,GAAM,Y,oBAIYxC,MAAM,+C,eAAlBO,E,iBACiBA,EAAIC,O,QAArBa,E,OACNX,QAAQC,IAAIU,GACHgB,EAAI,E,aAAGA,EAAIhB,EAASkB,Q,wBAGrBE,EAAW,IAAIC,UACVC,OAAO,OAAQtB,EAASgB,GAAGO,M,oBAEd5C,MAAM,8CAA+C,CACnEE,QAAS,CACL2C,cAAc,OAAD,OAASnE,aAAaC,QAAQ,WAE/CsB,OAAQ,OACRE,KAAMsC,I,eALJlC,E,iBAOgBA,EAAIC,O,QAC1B,IADMsC,E,OACGC,EAAI,EAAGA,EAAID,EAAQP,OAAQQ,IAChCD,EAAQC,GAAGC,OAAOC,UAAYT,EAAaM,EAAQC,GAAGC,OAAOC,WAEjE5B,EAASgB,GAAGa,SAAWJ,E,mDAEvBpC,QAAQC,IAAR,MACAD,QAAQC,IAAI,uB,QAEhBtC,KAAKC,SAAS,CACV+C,a,QAvB6BgB,I,2EA6BrC3B,QAAQC,IAAI,0B,QAKqB,MAAjCjC,aAAaC,QAAQ,UACrBC,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,SAEpDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,Q,4MAQzCX,G,gFAEG,KAAdA,EAAEK,Q,wBACFiC,QAAQC,IAAI,kBAAmBtC,KAAKP,MAAMC,OACtCgE,EAAS,IAAIC,IAAcC,OAAO,CAClCC,KAAM,0B,kBAGiBH,EAAON,OAAO,CACjCU,EAAG9D,KAAKP,MAAMC,Q,OAGlB,IAJMqE,E,OAGFf,EAAW,GACNgB,EAAI,EAAGA,EAAID,EAASE,KAAKA,KAAKC,OAAQF,IAC3ChB,EAASpC,KAAKmD,EAASE,KAAKA,KAAKD,GAAnB,SAGlBhE,KAAKC,SAAS,CACV+C,SAAUA,I,kDAGdX,QAAQC,IAAI,yB,mJAKZvC,GAERA,EAAE+E,iBACF9E,KAAKC,SAAS,CACVP,MAAOK,EAAEG,OAAOC,QAEpBkC,QAAQC,IAAItC,KAAKP,MAAMC,S,iCAGhBqF,GACP,IAAIC,EAAI,IAAIC,KAAKF,GACbG,EAAQ,IAAMF,EAAEG,WAAa,GAC7BC,EAAM,GAAKJ,EAAEK,UACbC,EAAON,EAAEO,cAOb,OALIL,EAAMhB,OAAS,IACfgB,EAAQ,IAAMA,GACdE,EAAIlB,OAAS,IACbkB,EAAM,IAAMA,GAET,CAACE,EAAMJ,EAAOE,GAAKI,KAAK,O,+BAEzB,IAAD,OACL,OACI,yBAAK3E,GAAG,qBACJ,yBAAKC,UAAU,mBAAmBD,GAAG,cACjC,yBAAKE,IAAI,cAAcD,UAAU,OAAOE,IAAKyE,MAC7C,2BAAOtE,UAAWnB,KAAKiD,aAAc/B,SAAUlB,KAAKkD,YAAa9B,aAAa,MAAMoB,KAAK,SAAS3B,GAAG,SAASQ,YAAY,sBAE9H,yBAAKR,GAAG,cACHb,KAAKP,MAAMuD,SAAS0C,KAAI,SAAAC,GAAI,OACzB,yBAAK9E,GAAG,WAAW+E,IAAKD,EAAKpB,MACzB,6BACI,6BACI,yBAAK1D,GAAG,aACH8E,EAAKE,OAEV,yCACa,8BAAOF,EAAKG,UAEzB,wCACY,kCAAQH,EAAKI,UAK7B,yBAAKlF,GAAG,WACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,SAAR,QAEA,8BACS8E,EAAKpB,QAKlB,yBAAKzD,UAAU,eACV6E,EAAKd,SAASa,KAAI,SAAAjB,GAAO,OACtB,yBAAK3D,UAAY,eAAe8E,IAAKnB,EAAQE,OAAOqB,UAChD,6BACI,0BAAMnF,GAAG,aAAa4D,EAAQE,OAAOC,WAErC,sCACWH,EAAQE,OAAOsB,OAG9B,yBAAKpF,GAAG,WACR,yBAAKC,UAAY,gBAAjB,WACa2D,EAAQE,OAAOuB,MACxB,6BAAM,EAAK/C,WAAWsB,EAAQE,OAAOqB,2B,GAlM7C3G,aCDf8G,E,YACjB,WAAY3G,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CACTE,UAAU,EACViD,WAAY,GACZrB,SAAU,GACVoB,MAAO,GACPkC,SAAU,IAEd,EAAKuB,cAAgB,EAAKA,cAAcvG,KAAnB,gBACrB,EAAKwG,WAAa,EAAKA,WAAWxG,KAAhB,gBAClB,EAAKC,aAAe,EAAKA,aAAaD,KAAlB,gBACpB,EAAKyG,YAAc,EAAKA,YAAYzG,KAAjB,gBAZJ,E,2EAeJ,IAAD,OACNsE,EAAe,CACf,GAAM,YACN,EAAK,OACL,EAAK,OACL,EAAK,OACL,GAAM,YAKV,IACIxC,MAAM,qCAAsC,CACxCE,QAAS,CACL2C,cAAc,OAAD,OAASnE,aAAaC,QAAQ,WAE/CsB,OAAQ,QACTK,MAAK,SAAA8B,GAAQ,OAAIA,EAAS5B,UACxBF,MAAK,SAAAE,GAGF,IAFA,IAAI0C,EAAW,GACX0B,EAAQ,GACHvC,EAAI,EAAGA,EAAI7B,EAAK+B,OAAQF,IACP,kBAAlB7B,EAAK6B,GAAGwC,MACR3B,EAASjE,KAAK,CACV6F,KAAMtE,EAAK6B,GAAGW,OAAOqB,SACrBpB,UAAWT,EAAahC,EAAK6B,GAAGW,OAAOC,WACvCL,KAAMpC,EAAK6B,GAAGW,OAAOJ,KACrB2B,MAAO/D,EAAK6B,GAAGW,OAAOuB,MACtBH,OAAQ,GACRF,MAAO,GACPC,QAAS,KAIbS,EAAM3F,KAAK,CACPmF,OAAQ5D,EAAK6B,GAAGW,OAAOoB,OACvBD,QAAS3D,EAAK6B,GAAGW,OAAOmB,QACxBD,MAAO1D,EAAK6B,GAAGW,OAAOkB,MACtBtB,KAAMpC,EAAK6B,GAAG0C,KAI1B,IAAK,IAAI1C,EAAI,EAAGA,EAAIa,EAASX,OAAQF,IACjC,IAAK,IAAIU,EAAI,EAAGA,EAAI6B,EAAMrC,OAAQQ,IAC1BG,EAASb,GAAGO,OAASgC,EAAM7B,GAAGH,OAC9BM,EAASb,GAAG+B,OAASQ,EAAM7B,GAAGqB,OAC9BlB,EAASb,GAAG6B,MAAQU,EAAMvC,GAAG6B,MAC7BhB,EAASb,GAAG8B,QAAUS,EAAMvC,GAAG8B,SAE/B9B,IAAMa,EAASX,OAAS,GAAKQ,IAAM6B,EAAMrC,OAAS,GAClD,EAAKjE,SAAS,CACV4E,SAAUA,OAMpC,MAAO9E,GACLsC,QAAQC,IAAI,mB,wKAKsBqE,IAAlCtG,aAAaC,QAAQ,UACrBN,KAAKC,SAAS,CACVN,UAAU,I,SAKAgC,MAAM,oCAAqC,CACzDE,QAAS,CACL2C,cAAc,OAAD,OAASnE,aAAaC,QAAQ,a,cAF7C4B,E,gBAKcA,EAAIC,O,OAGH,4BAHfyE,E,QAGIC,SACNxG,aAAayG,QACb9G,KAAKC,SAAS,CACVN,UAAU,KAKlBK,KAAKC,SAAS,CACV2C,WAAYgE,EAAMhE,WAClBD,MAAOiE,EAAMjE,MACbpB,SAAUqF,EAAMrF,WAKiB,MAAjClB,aAAaC,QAAQ,eAAsDqG,IAAlCtG,aAAaC,QAAQ,UAC9DC,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,SAEpDH,SAASC,eAAe,cAAcC,MAAMC,QAAU,OACtDH,SAASC,eAAe,aAAaC,MAAMC,QAAU,OACrDH,SAASC,eAAe,YAAYC,MAAMC,QAAU,QAGxDV,KAAKsG,c,2IAIKS,GAAQ,IAAD,OACjBA,EAAMjC,iBAGN,IAAIkC,EAAW,IAAI3C,SAAS0C,EAAM7G,QAClC8G,EAAS1C,OAAO,OAAQtE,KAAKP,MAAM8B,UACnCyF,EAAS1C,OAAO,WAAY,IAAIW,MAChC,IACItD,MAAM,qCAAsC,CACxCE,QAAS,CACL2C,cAAc,OAAD,OAASnE,aAAaC,QAAQ,WAE/CsB,OAAQ,OACRE,KAAMkF,IAEL/E,MAAK,SAAA8B,GACF1B,QAAQC,IAAIyB,GACY,MAApBA,EAASkD,QACT1G,SAASC,eAAe,eAAeC,MAAMC,QAAU,QACvDH,SAASC,eAAe,UAAUC,MAAMC,QAAU,OAClDH,SAASC,eAAe,QAAQL,MAAQ,GACxCI,SAASC,eAAe,SAASL,MAAQ,GACzC,EAAKmG,gBAEL/F,SAASC,eAAe,eAAeC,MAAMC,QAAU,OACvDH,SAASC,eAAe,UAAUC,MAAMC,QAAU,YAIhE,MAAOX,GACLsC,QAAQC,IAAI,oB,iCAITyE,GACPA,EAAMjC,iBAGN,IAAIkC,EAAW,IAAI3C,SAAS0C,EAAM7G,QAClC,IACIyB,MAAM,oCAAqC,CACvCE,QAAS,CACL2C,cAAc,OAAD,OAASnE,aAAaC,QAAQ,WAE/CsB,OAAQ,OACRE,KAAMkF,IACP/E,MAAK,SAAA8B,GACJ1B,QAAQC,IAAIyB,EAASjC,MACG,MAApBiC,EAASkD,OACT1G,SAASC,eAAe,mBAAmBC,MAAMC,QAAU,QAG3DH,SAASC,eAAe,cAAcC,MAAMC,QAAU,WAGhE,MAAOX,GACLsC,QAAQC,IAAI,oB,mCAIPvC,GAETC,KAAKC,SAAL,eACKF,EAAEG,OAAOwB,KAAO3B,EAAEG,OAAOC,U,+BAQ9B,OADqBH,KAAKP,MAAlBE,SAEG,kBAAC,IAAD,CAAUgB,GAAG,SAASC,MAAM,IAInC,yBAAKC,GAAG,UAAUC,UAAU,kBACxB,yBAAKD,GAAG,iBACJ,yBAAKA,GAAG,WACJ,6BACI,wBAAIA,GAAG,kBAAP,aAAkC,0BAAMC,UAAU,OAAOd,KAAKP,MAAMmD,YAApE,KACA,yBAAK/B,GAAG,SAAR,YAA0B,uBAAGqG,KAAM,UAAYlH,KAAKP,MAAMkD,OAAQ3C,KAAKP,MAAMkD,OAA7E,OAEJ,yBAAK7B,UAAU,OACX,yBAAKD,GAAG,YACJ,+CACA,yBAAKA,GAAG,eACHb,KAAKP,MAAMoF,SAASa,KAAI,SAAAC,GAAI,OACzB,yBAAK9E,GAAG,WAAW+E,IAAKD,EAAKpB,KAAMoB,EAAKc,MACpC,6BACI,6BACI,yBAAK5F,GAAG,gBACH8E,EAAKE,MADV,IACiB,0BAAMhF,GAAG,aAAa8E,EAAKf,YAE5C,wCACY,8BAAOe,EAAKI,SAExB,oDAEJ,yBAAKlF,GAAG,WACR,yBAAKA,GAAG,WACR,yBAAKA,GAAG,SAAR,QAAqB,8BAAO8E,EAAKpB,MAAY,wCAAcoB,EAAKO,MAAnB,sCAOjE,yBAAKrF,GAAG,gBACJ,iDACA,yBAAKA,GAAG,eAAc,0BAAMA,GAAG,WAAT,aACtB,yBAAKA,GAAG,UAAR,aACA,0BAAMA,GAAG,YAAYsG,SAAUnH,KAAKoG,eAChC,2BAAOtF,UAAU,YAAYY,KAAK,OAAOqB,UAAQ,EAAClC,GAAG,OAAOQ,YAAY,OAAOH,SAAUlB,KAAKF,eAE9F,4BAAQe,GAAG,YAAYa,KAAK,aACxB,4BAAQvB,MAAM,MAAd,aACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,KAAd,QACA,4BAAQA,MAAM,MAAd,aAEJ,2BAAOW,UAAU,YAAYY,KAAK,QAAQqB,UAAQ,EAAClC,GAAG,QAAQQ,YAAY,QAAQH,SAAUlB,KAAKF,eACjG,4BAAQ0C,KAAK,UAAb,WAEJ,6CACA,yBAAK3B,GAAG,mBAAkB,0BAAMA,GAAG,WAAT,aAC1B,yBAAKA,GAAG,cAAR,aACA,0BAAMA,GAAG,YAAYsG,SAAUnH,KAAKqG,YAChC,2BAAOvF,UAAU,YAAYY,KAAK,OAAOqB,UAAQ,EAAClC,GAAG,OAAOQ,YAAY,OAAOH,SAAUlB,KAAKF,eAC9F,2BAAOgB,UAAU,YAAYY,KAAK,QAAQqB,UAAQ,EAAClC,GAAG,QAAQQ,YAAY,QAAQH,SAAUlB,KAAKF,eACjG,2BAAOgB,UAAU,YAAYY,KAAK,SAASqB,UAAQ,EAAClC,GAAG,SAASQ,YAAY,SAASH,SAAUlB,KAAKF,eACpG,2BAAOgB,UAAU,YAAYY,KAAK,UAAUqB,UAAQ,EAAClC,GAAG,UAAUQ,YAAY,UAAUH,SAAUlB,KAAKF,eACvG,4BAAQ0C,KAAK,UAAb,oB,GAjQCnD,a,iBCmFtB+H,MAxEf,WAEE,OACE,yBAAKtG,UAAU,OACb,kBAAC,IAAD,KACE,yBAAKD,GAAG,UACN,6BACE,kBAAC,IAAD,CAAMF,GAAG,KACP,yBAAKE,GAAG,OAAOE,IAAI,OAAOC,IAAKqG,QAGnC,kBAAC,IAAD,CAAM1G,GAAG,KACP,wBAAIE,GAAG,aAAP,SAIF,yBAAKA,GAAG,WAGR,yBAAKC,UAAU,WACb,kBAAC,IAAD,CAAMH,GAAG,UAAT,WAIF,yBAAKG,UAAU,UAAUD,GAAG,cAC1B,kBAAC,IAAD,CAAMF,GAAG,WAAT,eAIF,yBAAKG,UAAU,UAAUD,GAAG,YAC1B,kBAAC,IAAD,CAAMF,GAAG,SAAT,mBAIF,yBAAKG,UAAU,UAAUD,GAAG,aAC1B,kBAAC,IAAD,CAAMF,GAAG,IAAI8B,QAAU,kBAAMpC,aAAaiH,WAAW,WAArD,YAOJ,yBAAKzG,GAAG,WAEN,kBAAC,IAAD,CAAO0G,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,SAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,QAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,aAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,WAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,YAChB,kBAAC,EAAD,WCjEQC,QACW,cAA7BpE,OAAOC,SAASoE,UAEe,UAA7BrE,OAAOC,SAASoE,UAEhBrE,OAAOC,SAASoE,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAStH,SAASC,eAAe,SD2H3C,kBAAmBsH,WACrBA,UAAUC,cAAcC,MAAM/F,MAAK,SAAAgG,GACjCA,EAAaC,kB","file":"static/js/main.22c7cf02.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/search.53cd8267.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee033328.svg\";","\nimport React, { Component } from 'react';\n\n\nexport default class Home extends Component {\n    render() {\n        return (\n            <div>\n                Home\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react';\n\n\nexport default class Add extends Component {\n    render() {\n        return (\n            <div>\n                Add\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react';\nimport '../App.css';\nimport Search from \"../media/search.svg\"\nimport {Redirect } from \"react-router-dom\";\n\nexport default class Landing extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            query: \"\",\n            navigate: false\n        }\n\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n    }\n    handleChange(e) {\n        // Update State variable\n        this.setState({\n            query: e.target.value\n        });\n    }\n    handleSubmit(e) {\n        // Handle Enter Press\n        if (e.keyCode === 13) {\n            this.setState({\n                navigate:true\n            })\n        }\n    }\n    componentDidMount() {\n        if(localStorage.getItem(\"token\") != null){\n            document.getElementById(\"navProfile\").style.display = \"flex\"\n            document.getElementById(\"navLogout\").style.display = \"flex\"\n            document.getElementById(\"navLogin\").style.display = \"none\"\n        }else{\n            document.getElementById(\"navProfile\").style.display = \"none\"\n            document.getElementById(\"navLogout\").style.display = \"none\"\n            document.getElementById(\"navLogin\").style.display = \"flex\"\n        }\n    }\n    render() {\n        // Redirect on search\n        const { navigate } = this.state\n        if (navigate) {\n            return <Redirect to={\"/search?query=\"+ this.state.query} push={true} />\n        }\n        return (\n            <div id=\"landing\">\n                <div>\n                    <h1 id=\"search-title\">Welcome</h1>\n                    <div className=\"search-container\">\n                        <img alt=\"Search Icon\" className=\"icon\" src={Search}></img>\n                        <input onChange={this.handleChange} onKeyDown={this.handleSubmit} autoComplete=\"off\"  id=\"search\" placeholder=\"Search... (ISBN)\"></input>\n                    </div>\n                    <div id=\"subtext\">\n                        ( Input the ISBN and we'll find the book for you! )\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\n\n\nexport default class Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"joe\",\n            password: \"\",\n            navigate: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.handleSubmit = this.handleSubmit.bind(this)\n        this.buttonCheck = this.buttonCheck.bind(this)\n    }\n    handleChange(e) {\n        // Update al State variables\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    handleSubmit() {\n        // Login  & fetch token to store. \n        fetch('http://localhost:8000/token-auth/', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username: this.state.username,\n                password: this.state.password,\n            })\n        })\n            .then(res => res.json())\n            .then(json => {\n                if (json.token != null) {\n                    console.log(json.token)\n                    localStorage.setItem('token', json.token);\n                    // Set Redirect\n                    this.setState({\n                        navigate: true\n                    })\n                } else {\n                    console.log(\"Login Failed\")\n                    document.getElementById(\"checker\").style.display = \"block\";\n                }\n            });\n    }\n    buttonCheck(e) {\n        // Handle Enter Press\n        if (e.keyCode === 13) {\n            this.handleSubmit()\n        }\n    }\n    componentDidMount() {\n        // Check if logged in \n        if (localStorage.getItem(\"token\") != null) {\n            this.setState({\n                navigate: true\n            })\n            document.getElementById(\"navProfile\").style.display = \"flex\"\n            document.getElementById(\"navLogout\").style.display = \"flex\"\n            document.getElementById(\"navLogin\").style.display = \"none\"\n        } else {\n            document.getElementById(\"navProfile\").style.display = \"none\"\n            document.getElementById(\"navLogout\").style.display = \"none\"\n            document.getElementById(\"navLogin\").style.display = \"flex\"\n        }\n    }\n    render() {\n\n        // Redirect if logged in \n        const { navigate } = this.state\n        if (navigate) {\n            return <Redirect to=\"/profile\" push={true} />\n        }\n\n        return (\n            <div id=\"landing\">\n                <div id=\"loginBox\">\n                    <h1 id=\"loginTitle\">Login</h1>\n                    <div id=\"loginBody\">\n                        <div id=\"checker\"> Check your Username & Password again</div>\n                        <input name=\"username\" onChange={this.handleChange} placeholder=\"Username\"></input>\n                        <input onKeyDown={this.buttonCheck} type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\"></input>\n                        <button onClick={this.handleSubmit} >Login</button>\n                    </div>\n\n                    <Link to=\"register\"><div id=\"register\">Create Account</div></Link>\n                </div>\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react';\nimport { Link, Redirect } from \"react-router-dom\";\n\nexport default class Register extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: \"\",\n            password: \"\",\n            email: \"\",\n            first_name: \"\",\n            last_name: \"\",\n            navigate: false\n        }\n        this.handleChange = this.handleChange.bind(this)\n        this.submitData = this.submitData.bind(this)\n        this.buttonCheck = this.buttonCheck.bind(this)\n    }\n    componentDidMount() {\n        // Check if logged in\n        if (localStorage.getItem(\"token\") != null) {\n            this.setState({\n                navigate: true\n            })\n            document.getElementById(\"navProfile\").style.display = \"flex\"\n            document.getElementById(\"navLogout\").style.display = \"flex\"\n            document.getElementById(\"navLogin\").style.display = \"none\"\n        } else {\n            document.getElementById(\"navProfile\").style.display = \"none\"\n            document.getElementById(\"navLogout\").style.display = \"none\"\n            document.getElementById(\"navLogin\").style.display = \"flex\"\n        }\n    }\n    handleChange(e) {\n        // Update state variables\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n    submitData() {\n        // Check if register is correctedly filled here.\n        try {\n            fetch(\"http://localhost:8000/api/user/register\", {\n                method: \"post\",\n                headers: {\n                    'Content-Type': 'application/json'\n                },\n                //make sure to serialize your JSON body\n                body: JSON.stringify({\n                    email: this.state.email,\n                    password: this.state.password,\n                    first_name: this.state.first_name,\n                    last_name: this.state.last_name,\n                    username: this.state.username,\n                })\n            })\n                .then(res => res.json())\n                .then(json => {\n                    if(json.token != null){\n                        localStorage.setItem('token', json.token);\n\n                    }\n                    if (json.token != null) {\n                        this.setState({\n                            navigate: true\n                        })\n                    }else{\n                        this.setState({\n                            navigate: false\n                        })\n                    }\n                });\n\n        } catch (e) {\n            console.log(\"Login Failed\")\n            // Don't Redirect it login failed\n            this.setState({\n                navigate: false\n            })\n        }\n    }\n    buttonCheck(e) {\n        // Handle Enter Press\n        if (e.keyCode === 13) {\n            this.submitData()\n        }\n    }\n    render() {\n        // Redirect if logged in\n        const { navigate } = this.state\n        if (navigate) {\n            return <Redirect to=\"/profile\" push={true} />\n        }\n\n        return (\n            <div id=\"landing\">\n                <div id=\"loginBox\">\n                    <h1 id=\"loginTitle\">Create Account</h1>\n                    <div id=\"loginBody\">\n                        <input required name=\"first_name\" onChange={this.handleChange} placeholder=\"First Name\"></input>\n                        <input required name=\"last_name\" onChange={this.handleChange} placeholder=\"Last Name\"></input>\n                        <input required name=\"email\" onChange={this.handleChange} placeholder=\"Email\"></input>\n                        <input required name=\"username\" onChange={this.handleChange} placeholder=\"Username\"></input>\n                        <input onKeyDown={this.buttonCheck} required type=\"password\" name=\"password\" onChange={this.handleChange} placeholder=\"Password\"></input>\n                        <button onClick={this.submitData}>Create Account</button>\n                    </div>\n\n                    <Link to=\"login\"><div id=\"register\">Login</div></Link>\n                </div>\n            </div>\n        )\n    }\n}","\nimport React, { Component } from 'react';\nimport SearchIcon from \"../media/search.svg\"\nimport elasticsearch from 'elasticsearch'\nexport default class Search extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            query: \"\",\n            booklist: [],\n        };\n        this.handleSearch = this.handleSearch.bind(this)\n        this.updateState = this.updateState.bind(this)\n        this.formatDate = this.formatDate.bind(this)\n    }\n    async componentDidMount() {\n        // Handle redirect from landing page search\n        let search = window.location.search;\n        let params = new URLSearchParams(search);\n        let query = params.get('query');\n        if (query != null) {\n            // Search with previous landing page query\n            var client = new elasticsearch.Client({\n                host: 'http://localhost:9200', // Change this to wherever the elasticsearch server is\n            });\n            try {\n                const response = await client.search({\n                    q: query\n                })\n                let booklist = []\n                for (let i = 0; i < response.hits.hits.length; i++) {\n                    booklist.push(response.hits.hits[i][\"_source\"])\n                }\n                this.setState({\n                    booklist: booklist\n                })\n                return\n            } catch (e) {\n                console.log(\"ERROR: SEARCH FAILED!\")\n                console.log(\"DEFAULTING...\")\n            }\n        }\n\n        let getCondition = {\n            \"VP\": \"Very Poor\",\n            \"P\": \"Poor\",\n            \"O\": \"Okay\",\n            \"G\": \"Good\",\n            \"LN\": \"Like New\"\n        }\n        // Get Default List of books\n        try {\n            const res = await fetch('http://localhost:8000/api/book/?format=json');\n            const booklist = await res.json();\n            console.log(booklist)\n            for (let i = 0; i < booklist.length; i++) {\n                // Change price\n                // Get Listing\n                let formData = new FormData();\n                formData.append(\"isbn\", booklist[i].isbn)\n                try {\n                    const res = await fetch('http://localhost:8000/api/listingsfromisbn/', {\n                        headers: {\n                            Authorization: `JWT ${localStorage.getItem('token')}`\n                        },\n                        method: 'POST',\n                        body: formData\n                    });\n                    const listing = await res.json();\n                    for (let k = 0; k < listing.length; k++) {\n                        listing[k].fields.condition = getCondition[listing[k].fields.condition]\n                    }\n                    booklist[i].listings = listing\n                } catch (e) {\n                    console.log(e)\n                    console.log(\"ISBN SEARCH FAILURE\")\n                }\n                this.setState({\n                    booklist\n                });\n\n            }\n\n        } catch (e) {\n            console.log(\"DEFAULT SEARCH FAILURE\")\n        }\n\n\n        // Check if logged in\n        if (localStorage.getItem(\"token\") != null) {\n            document.getElementById(\"navProfile\").style.display = \"flex\"\n            document.getElementById(\"navLogout\").style.display = \"flex\"\n            document.getElementById(\"navLogin\").style.display = \"none\"\n        } else {\n            document.getElementById(\"navProfile\").style.display = \"none\"\n            document.getElementById(\"navLogout\").style.display = \"none\"\n            document.getElementById(\"navLogin\").style.display = \"flex\"\n        }\n\n\n\n\n\n    }\n    async handleSearch(e) {\n        // Elastic Search\n        if (e.keyCode === 13) {\n            console.log(\"SEARCH QUERY:  \", this.state.query)\n            var client = new elasticsearch.Client({\n                host: 'http://localhost:9200', // Change this to wherever the elasticsearch server is\n            });\n            try {\n                const response = await client.search({\n                    q: this.state.query\n                })\n                let booklist = []\n                for (let i = 0; i < response.hits.hits.length; i++) {\n                    booklist.push(response.hits.hits[i][\"_source\"])\n                }\n\n                this.setState({\n                    booklist: booklist\n                })\n            } catch (e) {\n                console.log(\"ERROR: SEARCH FAILED!\")\n            }\n\n        }\n    }\n    updateState(e) {\n        // Update Search Query\n        e.preventDefault()\n        this.setState({\n            query: e.target.value\n        })\n        console.log(this.state.query)\n    }\n    \n    formatDate(date) {\n        var d = new Date(date),\n            month = '' + (d.getMonth() + 1),\n            day = '' + d.getDate(),\n            year = d.getFullYear();\n    \n        if (month.length < 2) \n            month = '0' + month;\n        if (day.length < 2) \n            day = '0' + day;\n    \n        return [year, month, day].join('-');\n    }\n    render() {\n        return (\n            <div id=\"search-background\">\n                <div className=\"search-container\" id=\"mainsearch\">\n                    <img alt=\"Search Icon\" className=\"icon\" src={SearchIcon}></img>\n                    <input onKeyDown={this.handleSearch} onChange={this.updateState} autoComplete=\"off\" type=\"search\" id=\"search\" placeholder=\"Search... (ISBN)\"></input>\n                </div>\n                <div id=\"searchBody\">\n                    {this.state.booklist.map(item => (\n                        <div id=\"bookItem\" key={item.isbn} >\n                            <div>\n                                <div>\n                                    <div id=\"bookTitle\">\n                                        {item.title}\n                                    </div>\n                                    <div>\n                                        Edition: <span>{item.edition}</span>\n                                    </div>\n                                    <div>\n                                        Author: <span> {item.author}</span>\n                                    </div>\n\n                                </div>\n\n                                <div id=\"grower\"></div>\n                                <div id=\"grower\"></div>\n                                <div id=\"right\">\n                                    ISBN:\n                                <span>\n                                        {item.isbn}\n                                    </span>\n\n                                </div>\n                            </div>\n                            <div className=\"listingDrop\">\n                                {item.listings.map(listing => (\n                                    <div className = \"listingChild\" key={listing.fields.added_at}>\n                                        <div>\n                                            <span id=\"statusNew\">{listing.fields.condition}</span>\n\n                                            <div>\n                                                User: {listing.fields.user}\n                                            </div>\n                                        </div>\n                                        <div id=\"grower\"></div>\n                                        <div className = \"listingRight\">  \n                                            Value: ${listing.fields.price}\n                                            <div>{this.formatDate(listing.fields.added_at)}</div>\n                                        </div>\n                                    </div>\n                                ))}\n                            </div>\n\n                        </div>\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Redirect } from \"react-router-dom\"\n\nexport default class Profile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            navigate: false,\n            first_name: \"\",\n            username: \"\",\n            email: \"\",\n            listings: [],\n        }\n        this.uploadListing = this.uploadListing.bind(this)\n        this.uploadBook = this.uploadBook.bind(this)\n        this.handleChange = this.handleChange.bind(this)\n        this.getListings = this.getListings.bind(this)\n    }\n\n    getListings() {\n        let getCondition = {\n            \"VP\": \"Very Poor\",\n            \"P\": \"Poor\",\n            \"O\": \"Okay\",\n            \"G\": \"Good\",\n            \"LN\": \"Like New\"\n        }\n\n\n        // Get listing\n        try {\n            fetch('http://localhost:8000/api/listing/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                },\n                method: 'GET',\n            }).then(response => response.json())\n                .then(json => {\n                    let listings = []\n                    let books = []\n                    for (let i = 0; i < json.length; i++) {\n                        if (json[i].model === \"books.listing\") {\n                            listings.push({\n                                time: json[i].fields.added_at,\n                                condition: getCondition[json[i].fields.condition],\n                                isbn: json[i].fields.isbn,\n                                price: json[i].fields.price,\n                                author: \"\",\n                                title: \"\",\n                                edition: \"\",\n                            })\n                        }\n                        else {\n                            books.push({\n                                author: json[i].fields.author,\n                                edition: json[i].fields.edition,\n                                title: json[i].fields.title,\n                                isbn: json[i].pk,\n                            })\n                        }\n                    }\n                    for (let i = 0; i < listings.length; i++) {\n                        for (let k = 0; k < books.length; k++) {\n                            if (listings[i].isbn === books[k].isbn) {\n                                listings[i].author = books[k].author\n                                listings[i].title = books[i].title\n                                listings[i].edition = books[i].edition\n                            }\n                            if (i === listings.length - 1 && k === books.length - 1) {\n                                this.setState({\n                                    listings: listings\n                                })\n                            }\n                        }\n                    }\n                })\n        } catch (e) {\n            console.log(\"FETCH FAILED\")\n        }\n    }\n    async componentDidMount() {\n        // Redirect to Login if token not found. \n        if (localStorage.getItem(\"token\") === undefined) {\n            this.setState({\n                navigate: true\n            })\n        }\n\n        // Use Token and get user Profile & name. \n        const res = await fetch('http://localhost:8000/api/profile', {\n            headers: {\n                Authorization: `JWT ${localStorage.getItem('token')}`\n            }\n        });\n        const reply = await res.json();\n\n        // If token expired then logout & redirect to login.\n        if (reply.detail === \"Signature has expired.\") {\n            localStorage.clear();\n            this.setState({\n                navigate: true\n            })\n        }\n\n        // Assign name and Email. \n        this.setState({\n            first_name: reply.first_name,\n            email: reply.email,\n            username: reply.username,\n        });\n\n\n        // Check if logged in\n        if (localStorage.getItem(\"token\") != null && localStorage.getItem(\"token\") !== undefined) {\n            document.getElementById(\"navProfile\").style.display = \"flex\"\n            document.getElementById(\"navLogout\").style.display = \"flex\"\n            document.getElementById(\"navLogin\").style.display = \"none\"\n        } else {\n            document.getElementById(\"navProfile\").style.display = \"none\"\n            document.getElementById(\"navLogout\").style.display = \"none\"\n            document.getElementById(\"navLogin\").style.display = \"flex\"\n        }\n\n        this.getListings()\n\n\n    }\n    uploadListing(event) {\n        event.preventDefault();\n\n        // Attach token and upload listing. \n        let formdata = new FormData(event.target);\n        formdata.append(\"user\", this.state.username)\n        formdata.append(\"added_at\", new Date())\n        try {\n            fetch('http://localhost:8000/api/listing/', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                },\n                method: 'POST',\n                body: formdata,\n            })\n                .then(response => {\n                    console.log(response)\n                    if (response.status === 201) {\n                        document.getElementById(\"successWrap\").style.display = \"block\"\n                        document.getElementById(\"failed\").style.display = \"none\"\n                        document.getElementById(\"isbn\").value = \"\"\n                        document.getElementById(\"price\").value = \"\"\n                        this.getListings()\n                    } else {\n                        document.getElementById(\"successWrap\").style.display = \"none\"\n                        document.getElementById(\"failed\").style.display = \"block\"\n                    }\n                })\n\n        } catch (e) {\n            console.log(\"UPLOAD FAILED\")\n        }\n\n    }\n    uploadBook(event) {\n        event.preventDefault();\n\n        // Attach token to upload book.\n        let formdata = new FormData(event.target);\n        try {\n            fetch('http://localhost:8000/api/addbook', {\n                headers: {\n                    Authorization: `JWT ${localStorage.getItem('token')}`\n                },\n                method: 'POST',\n                body: formdata,\n            }).then(response => {\n                console.log(response.body)\n                if (response.status === 200) {\n                    document.getElementById(\"successWrapBook\").style.display = \"block\"\n\n                } else {\n                    document.getElementById(\"failedBook\").style.display = \"block\"\n                }\n            })\n        } catch (e) {\n            console.log(\"UPLOAD FAILED\")\n        }\n    }\n\n    handleChange(e) {\n        // Update state variables.\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    render() {\n\n        // Redirect to Login if token not found. \n        const { navigate } = this.state\n        if (navigate) {\n            return <Redirect to=\"/login\" push={true} />\n        }\n\n        return (\n            <div id=\"landing\" className=\"profileLanding\">\n                <div id=\"profilePadder\">\n                    <div id=\"profile\">\n                        <div>\n                            <h1 id=\"profileWelcome\"> Welcome, <span className=\"cap\">{this.state.first_name}</span>!</h1>\n                            <div id=\"email\" >( Email: <a href={\"mailto:\" + this.state.email}>{this.state.email}</a> )</div>\n                        </div>\n                        <div className=\"row\">\n                            <div id=\"listings\">\n                                <div>Your Listings:</div>\n                                <div id=\"listingBody\">\n                                    {this.state.listings.map(item => (\n                                        <div id=\"listItem\" key={item.isbn +item.time}>\n                                            <div>\n                                                <div>\n                                                    <div id=\"listingTitle\">\n                                                        {item.title} <span id=\"statusNew\">{item.condition}</span>\n                                                    </div>\n                                                    <div>\n                                                        Author: <span>{item.author}</span>\n                                                    </div>\n                                                    <div>New York, NY 10003</div>\n                                                </div>\n                                                <div id=\"grower\"></div>\n                                                <div id=\"grower\"></div>\n                                                <div id=\"right\">ISBN:<span>{item.isbn}</span><div>Value: ${item.price}                          </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                            <div id=\"profileBooks\">\n                                <div>Upload Listings:</div>\n                                <div id=\"successWrap\"><span id=\"success\">Success!</span></div>\n                                <div id=\"failed\">Failed...</div>\n                                <form id=\"loginBody\" onSubmit={this.uploadListing}>\n                                    <input className=\"bookInput\" name=\"isbn\" required id=\"isbn\" placeholder=\"isbn\" onChange={this.handleChange}></input>\n                                    {/* <input className=\"bookInput\" name=\"condition\" required id=\"condition\" placeholder=\"condition\" onChange={this.handleChange}></input> */}\n                                    <select id=\"Condition\" name=\"condition\">\n                                        <option value=\"VP\">Very Poor</option>\n                                        <option value=\"P\">Poor</option>\n                                        <option value=\"O\">Okay</option>\n                                        <option value=\"G\">Good</option>\n                                        <option value=\"LN\">Like New</option>\n                                    </select>\n                                    <input className=\"bookInput\" name=\"price\" required id=\"price\" placeholder=\"price\" onChange={this.handleChange}></input>\n                                    <button type=\"submit\"   >Submit</button>\n                                </form>\n                                <div>Upload Book:</div>\n                                <div id=\"successWrapBook\"><span id=\"success\">Success!</span></div>\n                                <div id=\"failedBook\">Failed...</div>\n                                <form id=\"loginBody\" onSubmit={this.uploadBook}>\n                                    <input className=\"bookInput\" name=\"isbn\" required id=\"isbn\" placeholder=\"isbn\" onChange={this.handleChange}></input>\n                                    <input className=\"bookInput\" name=\"title\" required id=\"title\" placeholder=\"title\" onChange={this.handleChange}></input>\n                                    <input className=\"bookInput\" name=\"author\" required id=\"author\" placeholder=\"author\" onChange={this.handleChange}></input>\n                                    <input className=\"bookInput\" name=\"edition\" required id=\"edition\" placeholder=\"edition\" onChange={this.handleChange}></input>\n                                    <button type=\"submit\"   >Submit</button>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n\n        )\n    }\n}","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\nimport Home from \"./component/home.component\"\nimport Add from \"./component/add.component\"\nimport Landing from \"./component/landing.component\"\nimport Login from \"./component/login.component\"\nimport Register from \"./component/register.component\"\nimport Search from \"./component/search.component\"\nimport Profile from \"./component/profile.component\"\n\nimport Logo from \"./media/logo.svg\"\n\nfunction App() {\n  \n  return (\n    <div className=\"App\">\n      <Router>\n        <div id=\"navbar\">\n          <div>\n            <Link to=\"/\">\n              <img id=\"logo\" alt=\"logo\" src={Logo}></img>\n            </Link>\n          </div>\n          <Link to=\"/\">\n            <h1 id=\"mainTitle\">\n              BOOK\n            </h1>\n          </Link>\n          <div id=\"grower\">\n\n          </div>\n          <div className=\"navitem\">\n            <Link to=\"search\">\n              Search\n              </Link>\n          </div>\n          <div className=\"navitem\" id=\"navProfile\">\n            <Link to=\"profile\">\n              My Profile\n              </Link>\n          </div>\n          <div className=\"navitem\" id=\"navLogin\">\n            <Link to=\"login\">\n              Login/Register\n              </Link>\n          </div>\n          <div className=\"navitem\" id=\"navLogout\">\n            <Link to=\"/\" onClick={ () => localStorage.removeItem(\"token\")}>\n              Logout\n              </Link>\n          </div>\n\n\n        </div>\n        <div id=\"content\">\n{/* Change to private Route after setting */}\n          <Route exact path=\"/\">\n            <Landing />\n          </Route>\n          <Route exact path=\"/home\">\n            <Home />\n          </Route>\n          <Route exact path=\"/add\">\n            <Add />\n          </Route>\n          <Route exact path=\"/login\">\n            <Login />\n          </Route>\n          <Route exact path=\"/register\">\n            <Register />\n          </Route>\n          <Route exact path=\"/search\">\n            <Search />\n          </Route>\n          <Route exact path=\"/profile\">\n            <Profile />\n          </Route>\n\n        </div>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}